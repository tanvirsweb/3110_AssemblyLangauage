.model small
.stack 100h

.data
    m1 db 10, 13, "Enter a string: $"
    m2 db 10, 13, "Reversed string: $"
    m3 db 10, 13, "The number of vowels: $"
    arrayy db 100 dup('$')
    countv db 0

.code
main proc
    mov ax, @data
    mov ds, ax

   ;pintint m1
    lea dx, m1
    mov ah, 9
    int 21h

    ;input
    lea dx, arrayy
    mov ah, 10
    int 21h

    ;printing m2
    lea dx, m2
    mov ah, 9
    int 21h

   lea si, arrayy
   add si, 2 

    ; Initialize vowel count

    mov countv,0

process_loop:

    mov bl, [si]
    cmp bl, 13
    je end_process

    ; Process a word
    push si
    mov cx, 0

    word_loop:
        ; end of word
         mov bl, [si]
        cmp bl, ' '
        je end_word
  
         mov bl, [si]
         cmp bl, 13
        je end_word

        ; Push
        mov al, [si]
        push ax
        inc si
        inc cx
        jmp word_loop

    end_word:
        ; Check if each letter is a vowel and update the vowel count
        count_vowels:
            pop ax
            cmp al, 'a'
            je increment_vowel
            cmp al, 'e'
            je increment_vowel
            cmp al, 'i'
            je increment_vowel
            cmp al, 'o'
            je increment_vowel
            cmp al, 'u'
            je increment_vowel
        printing:
            jmp continue_loop

        increment_vowel:
            inc countv

        continue_loop:
            ; Print the letter
            mov dl, al
            sub dl, 32    ; Convert to uppercase
            mov ah, 02h
            int 21h
            loop count_vowels

        ; Print a space
        mov dl, ' '
        mov ah, 02h
        int 21h

        ; Continue to the next word
        inc si
        jmp process_loop

end_process:
    ; Print the vowel count
    mov ah, 09h
    lea dx, m3
    int 21h

    mov al, countv
    add al, 30h   ; Convert the count to ASCII character
    mov dl, al 
    mov ah, 02h
    int 21h

 
    mov ah, 4ch
    int 21h

main endp
end main